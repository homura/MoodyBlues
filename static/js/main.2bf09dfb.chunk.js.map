{"version":3,"sources":["App.tsx","container/Header.tsx","component/SVGTooltip.tsx","component/Heatmap.tsx","container/RoundHeatmap.tsx","helper.ts","container/EventDetail.tsx","container/EventList.tsx","container/EpochOverview.tsx","container/Dashboard.tsx","container/Timeline.tsx","container/EpochTimeline.tsx","container/Profile.tsx","mock.ts","component/FileZone/index.tsx","container/Guide.tsx","store/index.ts","types.ts","event.ts","serviceWorker.ts","index.tsx","constants.ts"],"names":["Content","hot","module","store","Header","Logo","styled","div","AppHeader","type","SVGTooltip","props","followCursor","plugins","LegendItemWrapper","span","LegendItem","fill","label","width","height","x","y","Heatmap","withSize","padding","size","data","columnCount","Math","floor","scale","scaleLinear","domain","range","useState","tooltipContent","setTooltipContent","cells","useMemo","map","item","i","key","interpolateGreens","onMouseOver","onTooltip","onClick","onCellClick","animation","content","RoundHeatmap","events","useStoreState","state","tracer","activateEpoch","useStoreActions","actions","epochRoundMap","Events","roundCountEachEpoch","Array","from","keys","values","epochIds","roundIds","formatDate","date","pattern","format","theme","scheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","EventDetail","event","tag","_","get","eventName","timestamp","invertTheme","hideRoot","EventName","EventList","slice","activeEpoch","activeEvent","activateEvent","inactivateEvent","epoch","epochEvents","columns","title","dataIndex","render","name","record","index","startIndex","style","position","overflow","pagination","rowKey","String","dataSource","scroll","placement","onClose","visible","mask","getContainer","EpochOverview","epochSlice","roundCount","rounds","length","timeUsage","gutter","value","shortHex","hex","DashboardWrapper","ProposeTable","proposeEvents","filter","isProposeEvent","VoteTable","voteEvents","isVoteEvent","Dashboard","activeRound","roundSlice","isNil","md","sm","hoveringSegmentBackground","color","brighter","activeSegmentBackground","TimelineWrapper","Timeline","active","activeIndex","head","segments","last","start","total","xScale","widthScale","className","classNames","segment","overlay","segmentsText","onTip","tip","left","handleActive","EpochTimeline","activateRound","activateStep","inactivateRound","inactivateStep","activeRoundIndex","setActiveRoundIndex","activeStepIndex","setActiveStepIndex","handleInactiveStep","undefined","useEffect","roundTimelineProps","round","timeRange","roundId","handleActiveRound","stepTimelineProps","steps","step","stepName","handleActiveStep","ProfileWrapper","Profile","epochSelected","randomBytesAsHex","randombytes","toString","randomAddress","mockStartRound","keyframe","Keyframe","START_ROUND","mockStartStep","START_STEP","ns","vn","flatMap","v","n","ts","address","lock","random","tx","proposal","mockCustomEvent","epochId","rand","eventType","EventType","Propose","proposer","hash","mockReceivePropose","Vote","sample","voter","mockReceiveVote","Mock","options","time","this","initialOptions","startTime","startEpochId","Object","assign","epochCount","Date","now","max","consumeTime","push","count","START_EPOCH","baseStyle","flex","display","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","JSONLogReader","onLoad","useDropzone","accept","multiple","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","file","isEmpty","Promise","resolve","reject","reader","FileReader","onload","result","JSON","parse","readAsText","then","example","mock","blob","Blob","stringify","saveAs","saveFile","Guide","eventLoaded","loadEvents","storeModel","activeStep","computed","console","log","action","inactivateEpoch","typedHooks","createTypedHooks","createStore","useStoreDispatch","indexOfKeyframe","findIndex","isKeyframe","isKeyframeStartsOfEpoch","isKeyframeStartsOfRound","isKeyframeStartsOfStep","indexOfNextKeyframe","indexOfNextKeyframeByKey","checkIsKeyframeOf","BaseEvents","raw","endIndex","parent","memoize","nextSliceStartEvent","nextKeyframe","startAt","endAt","sliceArgs","end","EpochEvents","self","RoundEvents","roundEvents","StepEvents","parentSlice","nextRoundIndex","offset","empty","parentEvents","nextStepIndex","Map","newEpoch","set","forEach","e","Boolean","window","location","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","EventScopeType"],"mappings":"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","file":"static/js/main.2bf09dfb.chunk.js","sourcesContent":["import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport './App.css';\nimport { store } from './store';\nimport { StoreProvider } from 'easy-peasy';\nimport { Layout } from 'antd';\nimport { AppHeader } from './container/Header';\nimport { Guide } from './container/Guide';\n\nconst { Content } = Layout;\n\nconst App: React.FC = () => {\n  return (\n    <StoreProvider store={store}>\n      <AppHeader />\n      <Content>\n        <Guide />\n      </Content>\n    </StoreProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import React from 'react';\nimport { Icon, Layout } from 'antd';\nimport styled from 'styled-components';\n\nconst Header = Layout.Header;\n\nconst Logo = styled.div`\n  width: 120px;\n  height: 31px;\n  margin: 16px 24px 16px 0;\n  line-height: 32px;\n  float: left;\n  font-weight: bold;\n`;\n\nexport const AppHeader: React.FC = () => {\n  return (\n    <Header>\n      <Logo>\n        <Icon type=\"play-circle\" /> Moody Blues\n      </Logo>\n    </Header>\n  );\n};\n","import React from 'react';\nimport Tippy, { TippyProps } from '@tippy.js/react';\nimport { followCursor } from 'tippy.js';\nimport 'tippy.js/dist/tippy.css';\n\nexport const SVGTooltip = (props: TippyProps) => {\n  return <Tippy followCursor={true} plugins={[followCursor]} {...props} />;\n};\n","import React, { ReactChild, useMemo, useState } from 'react';\nimport { interpolateGreens } from 'd3-scale-chromatic';\nimport { scaleLinear } from 'd3-scale';\nimport { SizeMeProps, withSize } from 'react-sizeme';\nimport styled from 'styled-components';\nimport { SVGTooltip } from './SVGTooltip';\n\nconst LegendItemWrapper = styled.span`\n  margin-right: 8px;\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n\nconst LegendItem = ({ fill, label }: { fill: string; label: string }) => {\n  return (\n    <LegendItemWrapper>\n      <svg width={15} height={15}>\n        <rect x={0} y={0} width={12} height={12} fill={fill} />\n      </svg>\n      <span>{label}</span>\n    </LegendItemWrapper>\n  );\n};\n\nexport type HeatmapProps = SizeMeProps & {\n  data: number[];\n  domain: number[];\n  range: number[];\n  active?: number;\n  onTooltip?: (index: number) => ReactChild;\n  onCellClick?: (index: number) => void;\n};\n\nexport const Heatmap = withSize()((props: HeatmapProps) => {\n  const padding = [0, 0];\n  const width = (props.size.width as number) - padding[1] * 2;\n  const height = 200 - padding[0] * 2;\n\n  const { data } = props;\n\n  const cellSize = 12;\n  const paddedCellSize = 15;\n  const columnCount = Math.floor(height / paddedCellSize);\n\n  const scale = scaleLinear()\n    .domain([0, 3, 5])\n    .range([0, 0.8, 1]);\n\n  const [tooltipContent, setTooltipContent] = useState<ReactChild | undefined>(\n    '',\n  );\n\n  const cells = useMemo(\n    () => (\n      <g>\n        {data.map((item, i) => {\n          return (\n            <rect\n              key={i}\n              x={paddedCellSize * Math.floor(i / columnCount)}\n              y={paddedCellSize * (i % columnCount)}\n              width={cellSize}\n              height={cellSize}\n              fill={item === -1 ? '#ebedf0' : interpolateGreens(scale(item))}\n              onMouseOver={() => setTooltipContent(props.onTooltip?.(i))}\n              onClick={() => props.onCellClick?.(i)}\n            />\n          );\n        })}\n      </g>\n    ),\n    [data],\n  );\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        <SVGTooltip animation=\"fade\" content={tooltipContent as ReactChild}>\n          {cells}\n        </SVGTooltip>\n      </svg>\n      <div>\n        <LegendItem fill=\"#ebedf0\" label=\"incomplete\" />\n        <LegendItem fill={interpolateGreens(scale(1))} label=\"1\" />\n        <LegendItem fill={interpolateGreens(scale(3))} label=\"3\" />\n        <LegendItem fill={interpolateGreens(scale(5))} label=\"≥ 5\" />\n      </div>\n    </div>\n  );\n});\n","import React, { useMemo } from 'react';\nimport { Heatmap } from '../component/Heatmap';\nimport { Events } from '../event';\nimport { useStoreActions, useStoreState } from '../store';\n\nexport const RoundHeatmap = () => {\n  const events = useStoreState(state => state.tracer.events);\n  const activateEpoch = useStoreActions(\n    actions => actions.tracer.activateEpoch,\n  );\n\n  const [epochIds, roundIds] = useMemo((): [number[], number[]] => {\n    const epochRoundMap = new Events(events).roundCountEachEpoch();\n    const epochIds = Array.from(epochRoundMap.keys());\n    const roundIds = Array.from(epochRoundMap.values());\n    return [epochIds, roundIds];\n  }, [events]);\n\n  return (\n    <Heatmap\n      domain={[0, 3, 5]}\n      range={[0, 0.8, 1]}\n      data={roundIds}\n      onCellClick={i => activateEpoch(epochIds[i])}\n      onTooltip={i => (\n        <div>\n          epoch: {epochIds[i]} <br /> round: {roundIds[i]}\n        </div>\n      )}\n    />\n  );\n};\n","import { format } from 'date-fns';\nimport { TraceEvent } from './types';\n\nfunction hashCode(str: string) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction intToRGB(i: number) {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return '00000'.substring(0, 6 - c.length) + c;\n}\n\nexport function anyStrToColor(str: string): string {\n  return '#' + intToRGB(hashCode(str));\n}\n\nexport function readJSONLog(file: File): Promise<TraceEvent[]> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const events = reader.result as string;\n      resolve(JSON.parse(events));\n    };\n    reader.readAsText(file);\n  });\n}\n\nexport function formatDate(date: Date | number, pattern?: string) {\n  pattern = pattern ?? 'yyyy-MM-dd HH:mm:ss:SSS';\n  return format(date, pattern);\n}\n\n","import React from 'react';\nimport { Divider, Row, Col } from 'antd';\nimport JSONTree from 'react-json-tree';\nimport _ from 'lodash';\nimport { TraceEvent } from '../types';\nimport { formatDate } from '../helper';\n\nconst theme = {\n  scheme: 'monokai',\n  base00: 'unset',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633',\n};\n\ninterface EventDetailProps {\n  event: TraceEvent;\n}\n\nexport const EventDetail = (props: EventDetailProps) => {\n  const { event } = props;\n  if (!event) return null;\n\n  const tag = { tag: _.get(event, 'tag') } as {};\n\n  return (\n    <div>\n      <Row>\n        <Col span={8}>name</Col>\n        <Col span={16}>{event.eventName}</Col>\n\n        <Col span={8}>time</Col>\n        <Col span={16}>{formatDate(event.timestamp)}</Col>\n      </Row>\n      <Divider />\n      <JSONTree data={tag} theme={theme} invertTheme={false} hideRoot={true} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Drawer, Table } from 'antd';\nimport styled from 'styled-components';\nimport { useStoreActions, useStoreState } from '../store';\nimport { TraceEvent } from '../types';\nimport { EventDetail } from './EventDetail';\nimport { formatDate } from '../helper';\n\nconst EventName = styled.div`\n  cursor: pointer;\n`;\n\ninterface EventListProp {}\n\nexport const EventList = (props: EventListProp) => {\n  const { slice, activeEpoch, activeEvent } = useStoreState(\n    state => state.tracer,\n  );\n  const { activateEvent, inactivateEvent } = useStoreActions(\n    actions => actions.tracer,\n  );\n  if (activeEpoch === null) return null;\n  const epoch = slice.epoch(activeEpoch);\n  const epochEvents = epoch.events();\n\n  const columns = [\n    {\n      key: 'Name',\n      title: 'Name',\n      dataIndex: 'eventName',\n      render: (name: string, record: TraceEvent, index: number) => (\n        <EventName onClick={() => activateEvent(index + epoch.startIndex)}>\n          {name}\n        </EventName>\n      ),\n    },\n    {\n      key: 'Timestamp',\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      render: (timestamp: number) => formatDate(timestamp),\n    },\n  ];\n\n  return (\n    <div style={{ position: 'relative', overflow: 'hidden' }}>\n      <Table\n        size=\"small\"\n        pagination={false}\n        rowKey={(record: TraceEvent, i) => String(i)}\n        dataSource={epochEvents}\n        columns={columns}\n        scroll={{ y: 300 }}\n      />\n\n      <Drawer\n        placement=\"right\"\n        width={400}\n        onClose={() => inactivateEvent()}\n        visible={!!activeEvent}\n        mask={false}\n        getContainer={false}\n        style={{ position: 'absolute' }}\n      >\n        <EventDetail event={activeEvent as TraceEvent} />\n      </Drawer>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Row, Col, Statistic } from 'antd';\nimport { useStoreState } from '../store';\n\ninterface EpochOverviewProps {}\n\nexport const EpochOverview = (props: EpochOverviewProps) => {\n  const { activeEpoch, epochSlice } = useStoreState(state => state.tracer);\n\n  if (activeEpoch === null) return null;\n\n  const roundCount: number = epochSlice.rounds().length;\n  const timeUsage: string = epochSlice.timeUsage() + 'ms';\n\n  return (\n    <Row gutter={16}>\n      <Col span={6}>\n        <Statistic title=\"Epoch\" value={activeEpoch} />\n      </Col>\n      <Col span={6}>\n        <Statistic title=\"Round usage\" value={roundCount} />\n      </Col>\n\n      <Col span={6}>\n        <Statistic title=\"Time usage\" value={timeUsage} />\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { Card, Row, Col, Table } from 'antd';\nimport styled from 'styled-components';\nimport { useStoreState } from '../store';\nimport { isVoteEvent, Slice } from '../event';\nimport _ from 'lodash';\nimport { ProposeEvent, VoteEvent } from '../types';\nimport { isProposeEvent } from '../event';\nimport { ColumnProps } from 'antd/es/table';\n\nfunction shortHex(hex: string) {\n  return hex.slice(0, 8);\n}\n\nconst DashboardWrapper = styled.div`\n  padding: 16px 0;\n`;\n\nfunction ProposeTable(props: { slice: Slice }) {\n  const events = props.slice.events();\n\n  const proposeEvents = events.filter<ProposeEvent>(isProposeEvent);\n\n  const columns: ColumnProps<ProposeEvent>[] = [\n    { title: 'Name', key: 'eventName', dataIndex: 'eventName' },\n    { title: 'Round', key: 'tag.roundId', dataIndex: 'tag.roundId' },\n    {\n      title: 'Proposer',\n      key: 'tag.proposer',\n      dataIndex: 'tag.proposer',\n      render: shortHex,\n    },\n    {\n      title: 'Hash',\n      key: 'tag.hash',\n      dataIndex: 'tag.hash',\n      render: shortHex,\n    },\n  ];\n  return (\n    <Table\n      size=\"small\"\n      pagination={false}\n      scroll={{ y: 180 }}\n      columns={columns}\n      dataSource={proposeEvents}\n    />\n  );\n}\n\nfunction VoteTable(props: { slice: Slice }) {\n  const events = props.slice.events();\n\n  const voteEvents = events.filter<VoteEvent>(isVoteEvent);\n\n  const columns: ColumnProps<VoteEvent>[] = [\n    { title: 'Name', key: 'eventName', dataIndex: 'eventName' },\n    { title: 'Round', key: 'tag.roundId', dataIndex: 'tag.roundId' },\n    {\n      title: 'Voter',\n      key: 'tag.voter',\n      dataIndex: 'tag.voter',\n      render: shortHex,\n    },\n    {\n      title: 'Hash',\n      key: 'tag.hash',\n      dataIndex: 'tag.hash',\n      render: shortHex,\n    },\n  ];\n  return (\n    <Table\n      size=\"small\"\n      pagination={false}\n      scroll={{ y: 180 }}\n      columns={columns}\n      dataSource={voteEvents}\n    />\n  );\n}\n\nexport const Dashboard = () => {\n  const { activeEpoch, activeRound, epochSlice, roundSlice } = useStoreState(\n    state => state.tracer,\n  );\n\n  const slice: Slice = _.isNil(activeRound) ? epochSlice : roundSlice;\n\n  return (\n    <DashboardWrapper>\n      <Row gutter={16}>\n        <Col md={12} sm={24}>\n          <Card title=\"Received proposal\">\n            <ProposeTable slice={slice} />\n          </Card>\n        </Col>\n        <Col md={12} sm={24}>\n          <Card title=\"Received vote\">\n            <VoteTable slice={slice} />\n          </Card>\n        </Col>\n      </Row>\n    </DashboardWrapper>\n  );\n};\n","import React, { ReactElement, ReactNode } from 'react';\nimport { withSize, SizeMeProps } from 'react-sizeme';\nimport { scaleLinear } from 'd3-scale';\nimport styled from 'styled-components';\nimport { color } from 'd3-color';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { Tooltip } from 'antd';\n\ntype Range = [number, number];\n\nexport type TimelineProps = {\n  activeIndex?: number;\n  segments: Range[];\n  segmentsText: string[];\n  domain?: Range;\n  onTip?: (i: number) => ReactNode;\n  onClick?: (i: number) => void;\n};\n\nconst segmentBackground = '#eec360';\nconst hoveringSegmentBackground = color(segmentBackground)\n  ?.brighter(1.2)\n  .hex() as string;\n\nconst activeSegmentBackground = color(segmentBackground)\n  ?.brighter(1.6)\n  .hex() as string;\n\nconst TimelineWrapper = styled.div`\n  white-space: nowrap;\n  position: relative;\n  height: 18px;\n\n  .segment {\n    position: absolute;\n    line-height: 18px;\n    font-size: 12px;\n    height: 18px;\n    display: inline-block;\n    border: 1px solid #333333;\n    border-right: none;\n    background-color: ${segmentBackground};\n    color: #333333;\n    text-align: center;\n    cursor: pointer;\n    transition: border 0.2s;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n      background-color: ${hoveringSegmentBackground};\n    }\n\n    &.active {\n      border: 2px solid #0e639c;\n      background-color: ${activeSegmentBackground};\n    }\n  }\n`;\n\nexport const Timeline = withSize()((props: TimelineProps & SizeMeProps) => {\n  const active = props.activeIndex;\n\n  const domain = props.domain || [\n    _.head(props.segments)?.[0] ?? 0,\n    _.last(props.segments)?.[1] ?? 0,\n  ];\n\n  const [start, end] = domain;\n  const total = end - start;\n  const width = props.size.width as number;\n\n  const xScale = scaleLinear()\n    .range([0, width])\n    .domain(domain);\n  const widthScale = scaleLinear()\n    .range([0, width])\n    .domain([0, total]);\n\n  function handleActive(i: number) {\n    // eslint-disable-next-line no-unused-expressions\n    props.onClick?.(i);\n  }\n\n  function tip(i: number): ReactNode {\n    return (\n      <div>\n        <div>{props.segmentsText[i]}</div>\n        {props.onTip && props.onTip(i)}\n      </div>\n    );\n  }\n\n  return (\n    <TimelineWrapper className={classNames({ active: !_.isNil(active) })}>\n      {props.segments.map((segment, i) => (\n        <Tooltip key={i} overlay={() => tip(i)}>\n          <div\n            className={classNames(['segment', { active: active === i }])}\n            style={{\n              width: `${widthScale(segment[1] - segment[0])}px`,\n              left: `${xScale(segment[0])}px`,\n            }}\n            onClick={() => handleActive(i)}\n          >\n            {props.segmentsText[i]}\n          </div>\n        </Tooltip>\n      ))}\n    </TimelineWrapper>\n  );\n});\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { withSize, SizeMeProps } from 'react-sizeme';\nimport { useStoreActions, useStoreState } from '../store';\nimport { Timeline, TimelineProps } from './Timeline';\nimport { RoundSlice, StepSlice } from '../event';\n\ntype EpochTimelineProps = SizeMeProps & {};\n\nexport const EpochTimeline = withSize()((props: EpochTimelineProps) => {\n  const { epochSlice, roundSlice, activeEpoch, activeRound } = useStoreState(\n    state => state.tracer,\n  );\n  const {\n    activateRound,\n    activateStep,\n    inactivateRound,\n    inactivateStep,\n  } = useStoreActions(actions => actions.tracer);\n\n  const [activeRoundIndex, setActiveRoundIndex] = useState<\n    number | undefined\n  >();\n  const [activeStepIndex, setActiveStepIndex] = useState<number | undefined>();\n\n  useEffect(() => {\n    handleInactiveRound();\n  }, [activeEpoch]);\n\n  function handleActiveRound(i: number, rounds: RoundSlice[]) {\n    activateRound(rounds[i].roundId);\n    setActiveRoundIndex(i);\n    handleInactiveStep();\n  }\n\n  function handleActiveStep(i: number, steps: StepSlice[]) {\n    activateStep(steps[i].stepName);\n    setActiveStepIndex(i);\n  }\n\n  function handleInactiveRound() {\n    handleInactiveStep();\n    inactivateRound();\n    setActiveRoundIndex(undefined);\n  }\n\n  function handleInactiveStep() {\n    inactivateStep();\n    setActiveStepIndex(undefined);\n  }\n\n  const roundTimelineProps = useMemo<TimelineProps>(() => {\n    const rounds = epochSlice.rounds();\n    const segments = rounds.map(round => round.timeRange());\n    const segmentsText = rounds.map(round => `R${round.roundId}`);\n\n    return {\n      segments,\n      segmentsText,\n      onTip: i => rounds[i].timeUsage() + 'ms',\n      onClick: i => handleActiveRound(i, rounds),\n    };\n  }, [epochSlice]);\n\n  const stepTimelineProps = useMemo<TimelineProps>(() => {\n    const steps = roundSlice.steps();\n    const segments = steps.map(step => step.timeRange());\n    const segmentsText = steps.map(step => step.stepName);\n    return {\n      segments,\n      segmentsText,\n      onTip: i => steps[i].timeUsage() + 'ms',\n      onClick: i => handleActiveStep(i, steps),\n    };\n  }, [roundSlice]);\n\n  return (\n    <>\n      {activeEpoch !== null && (\n        <Timeline {...roundTimelineProps} activeIndex={activeRoundIndex} />\n      )}\n\n      {activeRound !== null && (\n        <Timeline {...stepTimelineProps} activeIndex={activeStepIndex} />\n      )}\n    </>\n  );\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Divider } from 'antd';\n\nimport { RoundHeatmap } from './RoundHeatmap';\nimport { EventList } from './EventList';\nimport { EpochOverview } from './EpochOverview';\nimport { Dashboard } from './Dashboard';\nimport { EpochTimeline } from './EpochTimeline';\nimport { useStoreState } from '../store';\nimport _ from 'lodash';\n\nconst ProfileWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const Profile: React.FC = () => {\n  const { activeEpoch } = useStoreState(state => state.tracer);\n\n  const epochSelected = !_.isNil(activeEpoch);\n\n  return (\n    <ProfileWrapper>\n      <RoundHeatmap />\n\n      {epochSelected && (\n        <>\n          <Divider />\n          <EpochOverview />\n\n          <Divider />\n          <EpochTimeline />\n          <Dashboard />\n\n          <Divider />\n          <EventList />\n        </>\n      )}\n    </ProfileWrapper>\n  );\n};\n","import _ from 'lodash';\nimport { Optional } from 'utility-types';\nimport randombytes from 'randombytes';\nimport {\n  EpochKeyframe,\n  Keyframe,\n  ProposeEvent,\n  RoundKeyframe,\n  StepKeyframe,\n  Tag,\n  TraceEvent,\n  VoteEvent,\n} from './types';\nimport { EventType } from './constants';\n\nfunction randomBytesAsHex(size: number = 32): string {\n  return '0x' + randombytes(size).toString('hex');\n}\n\nfunction randomAddress() {\n  return '0x10' + randombytes(20).toString('hex');\n}\n\nexport function mockStartEpoch(\n  timestamp: number,\n  epochId: number,\n): EpochKeyframe {\n  return {\n    timestamp,\n    eventName: 'goto_new_epoch',\n    keyframe: Keyframe.START_EPOCH,\n    tag: { epochId },\n  };\n}\n\nexport function mockStartRound(\n  timestamp: number,\n  roundId: number,\n): RoundKeyframe {\n  return {\n    timestamp,\n    eventName: 'goto_new_round',\n    keyframe: Keyframe.START_ROUND,\n    tag: { roundId },\n  };\n}\n\nconst steps = ['propose', 'prevote', 'precommit', 'commit'];\nexport function mockStartStep(timestamp: number, step: number): StepKeyframe {\n  const stepName = steps[step];\n  return {\n    eventName: stepName,\n    timestamp,\n    keyframe: Keyframe.START_STEP,\n    tag: { stepName },\n  };\n}\n\nexport function mockReceivePropose(\n  timestamp: number,\n  epochId: number,\n  roundId: number,\n): ProposeEvent {\n  return {\n    timestamp,\n    eventType: EventType.Propose,\n    eventName: 'receive_propose',\n    tag: {\n      epochId,\n      roundId,\n      proposer: randomAddress(),\n      hash: randomBytesAsHex(),\n    },\n  };\n}\n\nexport function mockReceiveVote(\n  timestamp: number,\n  epochId: number,\n  roundId: number,\n): VoteEvent {\n  return {\n    timestamp,\n    eventType: EventType.Vote,\n    eventName: _.sample(steps) as string,\n    tag: {\n      epochId,\n      roundId,\n      voter: randomAddress(),\n      hash: randomBytesAsHex(),\n    },\n  };\n}\n\nconst vs: string[] = [\n  'check',\n  'get',\n  'receive',\n  'request',\n  'start',\n  'validate',\n];\nconst ns: string[] = ['epoch', 'tx', 'proposal', 'vote', 'lock'];\nconst vn: string[] = _.flatMap(vs, v => ns.map(n => `${v}_${n}`));\n\nconst ts: Tag[] = [\n  { address: '0x10000000000000000000000000000000000000' },\n  {\n    address: '0x10000000000000000000000000000000000000',\n    lock: '0x10000000000000000000000000000000000000',\n  },\n  {\n    key: Math.random(),\n  },\n  {\n    tx: '0x10000000000000000000000000000000000000',\n    proposal: '0x10000000000000000000000000000000000000',\n  },\n];\n\nfunction mockTag(): Tag | undefined {\n  return _.sample(ts);\n}\n\nexport function mockCustomEvent(\n  timestamp: number,\n  epochId: number,\n  roundId: number,\n): TraceEvent {\n  const rand = Math.random();\n  if (rand < 0.33) {\n    return mockReceivePropose(timestamp, epochId, roundId);\n  } else if (rand < 0.66) {\n    return mockReceiveVote(timestamp, epochId, roundId);\n  }\n  return {\n    timestamp,\n    eventName: _.sample(vn) as string,\n    tag: mockTag(),\n  };\n}\n\ninterface MockOptions {\n  startTime: number;\n  startEpochId: number;\n  epochCount: number;\n}\n\nclass Mock {\n  private readonly options: MockOptions;\n\n  private time: number;\n  private epoch: number;\n  private round: number;\n  private step: number;\n\n  private readonly events: TraceEvent[];\n\n  constructor(options?: Optional<MockOptions>) {\n    this.events = [];\n    this.options = this.initialOptions(options);\n\n    const { startTime, startEpochId } = this.options;\n    this.time = startTime;\n    this.epoch = startEpochId;\n    this.round = 0;\n    this.step = 0;\n  }\n\n  initialOptions(options?: Optional<MockOptions>): MockOptions {\n    return Object.assign(\n      {\n        startEpochId: _.random(0, 10000000),\n        epochCount: 1200,\n        startTime: _.random(+new Date(2016, 1, 1), Date.now()),\n      },\n      options,\n    ) as MockOptions;\n  }\n\n  private consumeTime(max = 300) {\n    this.time += _.random(0, max);\n  }\n\n  private mockCustomEvent(n: number = 2) {\n    let i = _.random(0, n);\n    while (i--) {\n      this.consumeTime(30);\n      this.events.push(mockCustomEvent(this.time, this.epoch, this.round));\n    }\n  }\n\n  mock(): TraceEvent[] {\n    let count = this.options.epochCount;\n\n    while (count--) {\n      this.mockCustomEvent();\n      if (Math.random() < 0.05) {\n        this.consumeTime(3000);\n        this.epoch++;\n        continue;\n      }\n      this.consumeTime();\n      this.events.push(mockStartEpoch(this.time, this.epoch));\n\n      const round = _.random(0, 6);\n      while (this.round <= round) {\n        this.mockCustomEvent();\n\n        if (Math.random() < 0.05) {\n          this.consumeTime();\n          this.round++;\n          continue;\n        }\n        this.consumeTime();\n        this.events.push(mockStartRound(this.time, this.round));\n\n        const step = round === this.round ? 3 : _.random(0, 3);\n        while (this.step <= step) {\n          this.mockCustomEvent();\n\n          this.consumeTime();\n          this.events.push(mockStartStep(this.time, this.step));\n\n          this.step++;\n        }\n\n        this.step = 0;\n        this.round++;\n      }\n      this.round = 0;\n      this.epoch++;\n    }\n\n    return this.events;\n  }\n}\n\nexport { Mock };\n","import React, { useEffect, useMemo } from 'react';\nimport { useDropzone, DropzoneRootProps } from 'react-dropzone';\nimport { isEmpty } from 'lodash';\nimport { saveAs } from 'file-saver';\nimport { readJSONLog } from '../../helper';\nimport { TraceEvent } from '../../types';\nimport { Mock } from '../../mock';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744',\n};\n\nfunction saveFile() {\n  const filename = 'events.json';\n  const example: TraceEvent[] = new Mock().mock();\n\n  const blob = new Blob([JSON.stringify(example)], {\n    type: 'application/json',\n  });\n  saveAs(blob, filename);\n}\n\nexport function JSONLogReader({\n  onLoad,\n}: {\n  onLoad: (events: TraceEvent[]) => void;\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n  } = useDropzone({ accept: '.json', multiple: false });\n\n  useEffect(() => {\n    if (!isEmpty(acceptedFiles) && onLoad) {\n      readJSONLog(acceptedFiles[0]).then(onLoad);\n    }\n  }, [acceptedFiles]);\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragAccept, isDragActive, isDragReject],\n  );\n\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({ style } as DropzoneRootProps)}>\n        <input {...getInputProps()} />\n        <p>\n          Drag a parsed <strong>events.json</strong> here, or click to select\n          file\n        </p>\n      </div>\n      <div>\n        Or try this mock&nbsp;\n        <a onClick={() => saveFile()}>events.json</a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useStoreActions, useStoreState } from '../store';\nimport { Profile } from './Profile';\nimport { JSONLogReader } from '../component/FileZone';\n\nexport const Guide = () => {\n  const eventLoaded = useStoreState(state => state.tracer.eventLoaded);\n  const loadEvents = useStoreActions(actions => actions.tracer.loadEvents);\n\n  if (eventLoaded) return <Profile />;\n  return <JSONLogReader onLoad={loadEvents} />;\n};\n","import {\n  action,\n  Action,\n  computed,\n  Computed,\n  createStore,\n  createTypedHooks,\n} from 'easy-peasy';\nimport { TraceEvent } from '../types';\nimport { isEmpty } from 'lodash';\nimport { EpochSlice, Events, RoundSlice } from '../event';\n\ninterface TracerModel {\n  events: TraceEvent[];\n  activeIndex: number | null;\n  activeEpoch: number | null;\n  activeRound: number | null;\n  activeStep: string | null;\n\n  slice: Computed<TracerModel, Events>;\n  epochSlice: Computed<TracerModel, EpochSlice>;\n  roundSlice: Computed<TracerModel, RoundSlice>;\n  eventLoaded: Computed<TracerModel, boolean>;\n  activeEvent: Computed<TracerModel, TraceEvent | null>;\n\n  activateEpoch: Action<TracerModel, number>;\n  inactivateEpoch: Action<TracerModel>;\n  loadEvents: Action<TracerModel, TraceEvent[]>;\n  activateEvent: Action<TracerModel, number>;\n  inactivateEvent: Action<TracerModel>;\n\n  activateRound: Action<TracerModel, number>;\n  inactivateRound: Action<TracerModel>;\n\n  activateStep: Action<TracerModel, string>;\n  inactivateStep: Action<TracerModel>;\n}\n\ninterface StoreModel {\n  tracer: TracerModel;\n}\n\nconst storeModel: StoreModel = {\n  tracer: {\n    events: [],\n    activeIndex: null,\n    activeEpoch: null,\n    activeRound: null,\n    activeStep: null,\n\n    slice: computed([state => state.events], events => {\n      console.log('events changed');\n      return new Events(events);\n    }),\n    epochSlice: computed(state => {\n      return state.slice.epoch(state.activeEpoch ?? -1);\n    }),\n    roundSlice: computed(state => {\n      return state.epochSlice.round(state.activeRound ?? -1);\n    }),\n    eventLoaded: computed(state => !isEmpty(state.events)),\n    activeEvent: computed(state =>\n      state.activeIndex === null ? null : state.events[state.activeIndex],\n    ),\n\n    loadEvents: action((state, events) => {\n      state.events = events;\n    }),\n    activateEvent: action((state, index) => {\n      state.activeIndex = index;\n    }),\n    inactivateEvent: action(state => {\n      state.activeIndex = null;\n    }),\n\n    activateEpoch: action((state, epochId) => {\n      state.activeEpoch = epochId;\n      state.activeRound = null;\n      state.activeIndex = null;\n    }),\n    inactivateEpoch: action(state => {\n      state.activeEpoch = null;\n    }),\n\n    activateRound: action((state, roundId) => {\n      state.activeRound = roundId;\n    }),\n\n    inactivateRound: action(state => {\n      state.activeRound = null;\n    }),\n\n    activateStep: action((state, stepName) => {\n      state.activeStep = stepName;\n    }),\n\n    inactivateStep: action(state => {\n      state.activeStep = null;\n    }),\n  },\n};\n\nconst typedHooks = createTypedHooks<StoreModel>();\nexport const store = createStore<StoreModel>(storeModel);\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import { EventType } from './constants';\n\nexport interface Tag {\n  epochId?: number;\n  roundId?: number;\n  stepName?: string;\n  [key: string]: null | string | number | undefined;\n}\n\nexport enum Keyframe {\n  START_EPOCH,\n  START_ROUND,\n  START_STEP,\n}\n\nexport type KeyframeKey = Keyframe;\n\nexport interface BaseEvent {\n  timestamp: number;\n  eventName: string;\n  tag?: Tag;\n}\n\nexport interface KeyframeEvent extends BaseEvent {\n  keyframe: Keyframe;\n}\n\nexport interface EpochKeyframe extends BaseEvent {\n  keyframe: Keyframe.START_EPOCH;\n  tag: Tag & { epochId: number };\n}\n\nexport interface RoundKeyframe extends BaseEvent {\n  keyframe: Keyframe.START_ROUND;\n  tag: Tag & { roundId: number };\n}\n\nexport interface StepKeyframe extends BaseEvent {\n  keyframe: Keyframe.START_STEP;\n  tag: Tag & { stepName: string };\n}\n\nexport interface ProposeEvent extends BaseEvent {\n  eventType: EventType.Propose;\n  tag: Tag & {\n    epochId: number;\n    roundId: number;\n    proposer: string;\n    hash: string;\n  };\n}\n\nexport interface VoteEvent extends BaseEvent {\n  eventType: EventType.Vote;\n  tag: Tag & {\n    epochId: number;\n    roundId: number;\n    voter: string;\n    hash: string;\n  };\n}\n\nexport type TraceEvent =\n  | BaseEvent\n  | EpochKeyframe\n  | RoundKeyframe\n  | StepKeyframe\n  | ProposeEvent\n  | VoteEvent;\n","import _ from 'lodash';\nimport {\n  EpochKeyframe,\n  Keyframe,\n  KeyframeEvent,\n  KeyframeKey,\n  ProposeEvent,\n  RoundKeyframe,\n  StepKeyframe,\n  TraceEvent,\n  VoteEvent,\n} from './types';\nimport { EventType } from './constants';\n\nexport function indexOfKeyframe(\n  events: TraceEvent[],\n  key: KeyframeKey,\n  value: string | number,\n): number {\n  return events.findIndex(event => {\n    if (!isKeyframe(event)) return false;\n    if (key === Keyframe.START_EPOCH && isKeyframeStartsOfEpoch(event)) {\n      return value === event.tag.epochId;\n    } else if (key === Keyframe.START_ROUND && isKeyframeStartsOfRound(event)) {\n      return value === event.tag.roundId;\n    } else if (key === Keyframe.START_STEP && isKeyframeStartsOfStep(event)) {\n      return value === event.tag.stepName;\n    }\n    return false;\n  });\n}\n\nexport function indexOfNextKeyframe(\n  events: TraceEvent[],\n  startIndex: number,\n): number {\n  return _.findIndex(events, event => 'keyframe' in event, startIndex + 1);\n}\n\nexport function isProposeEvent(event: TraceEvent): event is ProposeEvent {\n  return 'eventType' in event && event.eventType === EventType.Propose;\n}\n\nexport function isVoteEvent(event: TraceEvent): event is VoteEvent {\n  return 'eventType' in event && event.eventType === EventType.Vote;\n}\n\nexport function isKeyframe(event: TraceEvent): event is KeyframeEvent {\n  return 'keyframe' in event;\n}\n\nexport function isKeyframeStartsOfEpoch(\n  event: KeyframeEvent,\n): event is EpochKeyframe {\n  return event.keyframe === Keyframe.START_EPOCH;\n}\n\nexport function isKeyframeStartsOfRound(\n  event: KeyframeEvent,\n): event is RoundKeyframe {\n  return event.keyframe === Keyframe.START_ROUND;\n}\n\nexport function isKeyframeStartsOfStep(\n  event: KeyframeEvent,\n): event is StepKeyframe {\n  return event.keyframe === Keyframe.START_STEP;\n}\n\nexport function checkIsKeyframeOf(event: TraceEvent, key: Keyframe): boolean {\n  return isKeyframe(event) && event.keyframe === key;\n}\n\nexport function indexOfNextKeyframeByKey(\n  events: TraceEvent[],\n  startIndex: number,\n  key: KeyframeKey,\n) {\n  return _.findIndex(\n    events,\n    event => checkIsKeyframeOf(event, key),\n    startIndex + 1,\n  );\n}\n\nexport interface Slice {\n  startAt: () => number;\n  endAt: () => number;\n  timeUsage: () => number;\n  timeRange: () => [number, number];\n  events: () => TraceEvent[];\n  nextSliceStartEvent: () => TraceEvent | null;\n}\n\nexport interface StepSlice extends Slice {\n  stepName: string;\n}\n\nexport interface RoundSlice extends Slice {\n  readonly roundId: number;\n  steps: () => StepSlice[];\n}\n\nexport interface EpochSlice extends Slice {\n  readonly epochId: number;\n  round: (roundId: number) => RoundSlice;\n  rounds: () => RoundSlice[];\n}\n\nabstract class BaseEvents<T> implements Slice {\n  readonly raw: TraceEvent[];\n  readonly startIndex: number;\n  readonly endIndex: number;\n  abstract readonly parent: T;\n\n  protected constructor(raw: TraceEvent[], ...sliceArgs: any) {\n    this.raw = raw;\n    const [start, end] = this.slice(raw, ...sliceArgs);\n    this.startIndex = start;\n    this.endIndex = end;\n  }\n\n  protected abstract slice(\n    events: TraceEvent[],\n    ...args: any\n  ): [number, number];\n\n  events = _.memoize<() => TraceEvent[]>(() => {\n    if (this.startIndex === -1 || this.endIndex === -1) return [];\n    return this.raw.slice(this.startIndex, this.endIndex + 1);\n  });\n\n  nextSliceStartEvent: () => TraceEvent | null = () => {\n    if (this.startIndex === -1 || this.endIndex === -1) return null;\n    return this.raw[indexOfNextKeyframe(this.raw, this.endIndex)];\n  };\n\n  timeRange: () => [number, number] = () => {\n    if (this.startIndex === -1 || this.endIndex === -1) return [0, 0];\n    const nextKeyframe = this.nextSliceStartEvent();\n    if (!nextKeyframe) return [0, 0];\n    return [this.raw[this.startIndex].timestamp, nextKeyframe.timestamp];\n  };\n\n  startAt = () => this.raw[this.startIndex]?.timestamp ?? 0;\n\n  endAt = () => this.nextSliceStartEvent()?.timestamp ?? 0;\n\n  timeUsage = () => this.endAt() - this.startAt();\n}\n\nexport class EpochEvents extends BaseEvents<Events> implements EpochSlice {\n  readonly epochId: number;\n  readonly parent: Events;\n\n  constructor(raw: TraceEvent[], epochId: number, parent?: Events) {\n    super(raw, epochId);\n    this.epochId = epochId;\n    this.parent = parent as Events;\n  }\n\n  protected slice(events: TraceEvent[], epochId: number): [number, number] {\n    const start = indexOfKeyframe(events, Keyframe.START_EPOCH, epochId);\n    const end =\n      indexOfNextKeyframeByKey(events, start, Keyframe.START_EPOCH) - 1;\n    return [start, end];\n  }\n\n  rounds(): RoundSlice[] {\n    const epochEvents = this.events();\n    if (_.isEmpty(epochEvents)) return [];\n\n    const self = this;\n    return epochEvents\n      .filter<KeyframeEvent>(isKeyframe)\n      .filter<RoundKeyframe>(isKeyframeStartsOfRound)\n      .map<RoundSlice>(event => new RoundEvents(event.tag.roundId, self));\n  }\n\n  round(roundId: number): RoundSlice {\n    return new RoundEvents(roundId, this);\n  }\n\n  static empty(): EpochEvents {\n    return new EpochEvents([], -1);\n  }\n}\n\nexport class RoundEvents extends BaseEvents<EpochEvents> implements RoundSlice {\n  readonly roundId: number;\n  readonly parent: EpochEvents;\n\n  constructor(roundId: number, parent: EpochEvents) {\n    super(parent.raw, roundId, parent);\n    this.roundId = roundId;\n    this.parent = parent;\n  }\n\n  protected slice(\n    events: TraceEvent[],\n    roundId: number,\n    parentSlice: EpochEvents,\n  ): [number, number] {\n    const epochEvents = parentSlice.events();\n    const start = indexOfKeyframe(epochEvents, Keyframe.START_ROUND, roundId);\n    if (start === -1) return [0, 0];\n    const nextRoundIndex = indexOfNextKeyframeByKey(\n      epochEvents,\n      start,\n      Keyframe.START_ROUND,\n    );\n    const end =\n      nextRoundIndex === -1 ? epochEvents.length - 1 : nextRoundIndex - 1;\n    const offset = parentSlice.startIndex;\n    return [start + offset, end + offset];\n  }\n\n  steps: () => StepSlice[] = () => {\n    const roundEvents = this.events();\n    if (_.isEmpty(roundEvents)) return [];\n\n    const self = this;\n    return roundEvents\n      .filter<KeyframeEvent>(isKeyframe)\n      .filter<StepKeyframe>(isKeyframeStartsOfStep)\n      .map<StepSlice>(event => new StepEvents(event.tag.stepName, self));\n  };\n\n  static empty(): RoundEvents {\n    return new RoundEvents(-1, EpochEvents.empty());\n  }\n}\n\nexport class StepEvents extends BaseEvents<RoundEvents> implements StepSlice {\n  readonly stepName: string;\n  readonly parent: RoundEvents;\n\n  constructor(stepName: string, parent: RoundEvents) {\n    super(parent.raw, stepName, parent);\n    this.stepName = stepName;\n    this.parent = parent;\n  }\n\n  slice(\n    raw: TraceEvent[],\n    stepName: string,\n    parent: RoundEvents,\n  ): [number, number] {\n    const parentEvents = parent.events();\n    const start = indexOfKeyframe(parentEvents, Keyframe.START_STEP, stepName);\n    if (start === -1) return [0, 0];\n    const nextStepIndex = indexOfNextKeyframeByKey(\n      parentEvents,\n      start,\n      Keyframe.START_STEP,\n    );\n    const end =\n      nextStepIndex === -1 ? parentEvents.length - 1 : nextStepIndex - 1;\n    const offset = parent.startIndex;\n    return [start + offset, end + offset];\n  }\n}\n\nexport class Events extends BaseEvents<null> implements Slice {\n  readonly parent = null;\n\n  constructor(raw: TraceEvent[]) {\n    super(raw);\n  }\n\n  protected slice(events: TraceEvent[]): [number, number] {\n    return [0, events.length];\n  }\n\n  roundCountEachEpoch(): Map<number, number> {\n    const events = this.raw;\n    const epochRoundMap: Map<number, number> = new Map();\n\n    let epoch = -1;\n    let round = -1;\n    for (const event of events) {\n      if (!isKeyframe(event)) continue;\n      if (isKeyframeStartsOfEpoch(event)) {\n        const newEpoch = event.tag.epochId;\n\n        // the first epoch appears in events\n        if (epoch === -1) {\n          epoch = newEpoch;\n          continue;\n        }\n\n        if (newEpoch - epoch === 1) {\n          epochRoundMap.set(epoch, round + 1);\n        } else {\n          // set round be -1 when the epoch is skipped\n          _.range(epoch, newEpoch).forEach(e => epochRoundMap.set(e, -1));\n        }\n\n        epoch = newEpoch;\n      } else if (isKeyframeStartsOfRound(event)) {\n        round = event.tag.roundId;\n      }\n    }\n    return epochRoundMap;\n  }\n\n  epoch(epochId: number): EpochEvents {\n    return new EpochEvents(this.raw, epochId, this);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export enum EventType {\n    Propose,\n    Vote,\n    Lock,\n    Custom,\n}\n\nexport enum EventScopeType {\n    Global,\n    Epoch,\n    Round,\n    Step,\n}"],"sourceRoot":""}