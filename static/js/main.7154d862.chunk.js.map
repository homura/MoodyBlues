{"version":3,"sources":["helper.ts","component/FileZone/index.tsx","store/index.ts","container/Minimap.jsx","container/EventDetail.tsx","container/EventInfo.tsx","container/Tracer.tsx","container/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["anyStrToColor","str","i","c","toString","toUpperCase","substring","length","intToRGB","hash","charCodeAt","hashCode","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","demo","encodeURIComponent","JSON","stringify","timestamp","eventName","scope","type","epochId","tag","key","number","null","roundId","epoch_hash","other_object","some_key","JSONLogReader","onLoad","useDropzone","accept","multiple","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","useEffect","file","isEmpty","Promise","resolve","reject","reader","FileReader","onload","events","result","parse","readAsText","then","style","useMemo","className","href","download","storeModel","tracer","activeIndex","eventLoaded","computed","state","activeEvent","loadEvents","action","active","index","inactive","store","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","EpochTooltip","epoch","RoundTooltip","round","MinimapTooltip","left","top","event","Tooltip","zIndex","color","Date","toJSON","slice","Minimap","withSize","withTooltip","props","hideTooltip","showTooltip","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","size","actions","width","start","_","head","end","last","useState","highlight","setHighlight","scale","scaleLinear","rangeRound","domain","clamp","height","fill","Group","map","cx","Circle","cursor","cy","brighter","r","onMouseEnter","onMouseLeave","onClick","theme","scheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","EventDetail","get","data","invertTheme","hideRoot","EventInfo","columns","title","dataIndex","render","name","record","position","overflow","rowKey","String","dataSource","pagination","scroll","y","placement","onClose","visible","getContainer","Profile","Tracer","Header","Logo","styled","div","AppHeader","Content","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7154d862.chunk.js","sourcesContent":["import { TraceEvent } from './types';\n\nfunction hashCode(str: string) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction intToRGB(i: number) {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return '00000'.substring(0, 6 - c.length) + c;\n}\n\nexport function anyStrToColor(str: string): string {\n  return '#' + intToRGB(hashCode(str));\n}\n\nexport function readJSONLog(file: File): Promise<TraceEvent[]> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const events = reader.result as string;\n      resolve(JSON.parse(events));\n    };\n    reader.readAsText(file);\n  });\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { useDropzone, DropzoneRootProps } from 'react-dropzone';\nimport { isEmpty } from 'lodash';\nimport { readJSONLog } from '../../helper';\nimport { TraceEvent } from '../../types';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744',\n};\n\nconst example = [\n  {\n    timestamp: 1574041897764,\n    eventName: 'start_epoch',\n    scope: {\n      type: 'epoch',\n      epochId: 1,\n    },\n    tag: {\n      key: 'start epoch',\n      number: 0,\n      null: null,\n    },\n  },\n\n  {\n    timestamp: 1574041897900,\n    eventName: 'start_round',\n    scope: {\n      type: 'round',\n      epochId: 1,\n      roundId: 0,\n    },\n    tag: {\n      key: 'start Round',\n      number: 0,\n      null: null,\n    },\n  },\n\n  {\n    timestamp: 1574041898500,\n    eventName: 'end_round',\n    scope: {\n      type: 'round',\n      epochId: 1,\n      roundId: 0,\n    },\n    tag: {\n      key: 'end roundddd',\n      number: 0,\n      null: null,\n    },\n  },\n\n  {\n    timestamp: 1574041898800,\n    eventName: 'receive_proposal',\n    scope: {\n      type: 'round',\n      epochId: 1,\n      roundId: 0,\n    },\n    tag: {\n      epoch_hash: '0x...',\n      'lock.round': null,\n      'lock.hash': null,\n      other_object: {\n        some_key: 'some value',\n      },\n    },\n  },\n\n  {\n    timestamp: 1574041900964,\n    eventName: 'end_epoch',\n    scope: {\n      type: 'epoch',\n      epochId: 1,\n    },\n    tag: {\n      key: 'end epoch aaa',\n      number: 0,\n      null: null,\n    },\n  },\n];\n\nconst demo =\n  'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(example));\n\nexport function JSONLogReader({\n  onLoad,\n}: {\n  onLoad: (events: TraceEvent[]) => void;\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n  } = useDropzone({ accept: '.json', multiple: false });\n\n  useEffect(() => {\n    if (!isEmpty(acceptedFiles) && onLoad) {\n      readJSONLog(acceptedFiles[0]).then(onLoad);\n    }\n  }, [acceptedFiles]);\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragAccept, isDragActive, isDragReject],\n  );\n\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({ style } as DropzoneRootProps)}>\n        <input {...getInputProps()} />\n        <p>\n          Drag a parsed <strong>events.json</strong> here, or click to select\n          file\n        </p>\n      </div>\n      <div>\n        Or try this demo&nbsp;\n        <a href={demo} download=\"events.json\">\n          events.json\n        </a>\n      </div>\n    </div>\n  );\n}\n","import {\n  action,\n  Action,\n  computed,\n  Computed,\n  createStore,\n  createTypedHooks,\n} from 'easy-peasy';\nimport { TraceEvent } from '../types';\nimport { isEmpty } from 'lodash';\n\ninterface TracerModel {\n  events: TraceEvent[];\n  activeIndex: number | null;\n\n  eventLoaded: Computed<TracerModel, boolean>;\n  activeEvent: Computed<TracerModel, TraceEvent | null>;\n\n  loadEvents: Action<TracerModel, TraceEvent[]>;\n  active: Action<TracerModel, number>;\n  inactive: Action<TracerModel>;\n}\n\ninterface StoreModel {\n  tracer: TracerModel;\n}\n\nconst storeModel: StoreModel = {\n  tracer: {\n    events: [],\n    activeIndex: null,\n    eventLoaded: computed(state => isEmpty(state.events)),\n    activeEvent: computed(state =>\n      state.activeIndex === null ? null : state.events[state.activeIndex],\n    ),\n\n    loadEvents: action((state, events) => {\n      state.events = events;\n    }),\n\n    active: action((state, index) => {\n      state.activeIndex = index;\n    }),\n\n    inactive: action(state => {\n      state.activeIndex = null;\n    }),\n  },\n};\n\nexport const store = createStore(storeModel);\n\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import React, { useState } from 'react';\nimport { Group } from '@vx/group';\nimport { Circle } from '@vx/shape';\nimport { scaleLinear } from '@vx/scale';\nimport _ from 'lodash';\nimport { Tooltip, withTooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport { color } from 'd3-color';\nimport { withSize } from 'react-sizeme';\nimport { anyStrToColor } from '../helper';\nimport { useStoreActions, useStoreState } from '../store';\n\nconst EpochTooltip = ({ epoch }) => {\n  return (\n    <>\n      <p>\n        epoch <strong>{epoch}</strong>\n      </p>\n    </>\n  );\n};\n\nconst RoundTooltip = ({ epoch, round }) => {\n  return (\n    <>\n      <p>\n        epoch <strong>{epoch}</strong>\n      </p>\n      <p>\n        round <strong>{round}</strong>\n      </p>\n    </>\n  );\n};\n\nconst MinimapTooltip = ({ left, top, event }) => {\n  const { scope } = event;\n  return (\n    <Tooltip top={top} left={left} style={{ zIndex: '9999' }}>\n      <h3 style={{ color: anyStrToColor(event.eventName) }}>\n        {event.eventName}\n      </h3>\n      <small>{new Date(event.timestamp).toJSON().slice(11)}</small>\n      {scope.type === 'epoch' && <EpochTooltip epoch={scope.epochId} />}\n      {scope.type === 'round' && (\n        <RoundTooltip epoch={scope.epochId} round={scope.roundId} />\n      )}\n    </Tooltip>\n  );\n};\n\nexport const Minimap = withSize()(\n  withTooltip(props => {\n    const {\n      hideTooltip,\n      showTooltip,\n      tooltipOpen,\n      tooltipLeft,\n      tooltipTop,\n      tooltipData,\n      size,\n    } = props;\n\n    const events = useStoreState(store => store.tracer.events);\n    const active = useStoreActions(actions => actions.tracer.active);\n\n    const fill = '#242424';\n    const width = size.width;\n    const height = 50;\n    const start = _.head(events).timestamp;\n    const end = _.last(events).timestamp;\n\n    const [highlight, setHighlight] = useState(null);\n\n    const scale = scaleLinear({\n      rangeRound: [0, width],\n      domain: [_.clamp(start, 0, start - 500), end + 500],\n      clamp: true,\n    });\n\n    return (\n      <div>\n        <svg width={width} height={height}>\n          <rect width={width} height={height} fill={fill} />\n          <Group>\n            {events.map((event, i) => {\n              const cx = scale(event.timestamp);\n              const cy = height / 2;\n              return (\n                <Circle\n                  style={{ cursor: 'pointer' }}\n                  key={i}\n                  cx={cx}\n                  cy={cy}\n                  fill={\n                    highlight === i\n                      ? color(anyStrToColor(event.eventName)).brighter()\n                      : anyStrToColor(event.eventName)\n                  }\n                  r={5}\n                  onMouseEnter={() => {\n                    setHighlight(i);\n                    showTooltip({\n                      tooltipLeft: cx,\n                      tooltipTop: cy + 20,\n                      tooltipData: event,\n                    });\n                  }}\n                  onMouseLeave={() => {\n                    hideTooltip();\n                    setHighlight(null);\n                  }}\n                  onClick={() => {\n                    active(i);\n                  }}\n                />\n              );\n            })}\n          </Group>\n        </svg>\n\n        {tooltipOpen && (\n          <MinimapTooltip\n            left={tooltipLeft}\n            top={tooltipTop}\n            event={tooltipData}\n          />\n        )}\n      </div>\n    );\n  }),\n);\n","import React from 'react';\nimport JSONTree from 'react-json-tree';\n\nimport { useStoreState } from '../store';\nimport _ from 'lodash';\n\nconst theme = {\n  scheme: 'monokai',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633',\n};\n\nexport const EventDetail = () => {\n  const { activeEvent } = useStoreState(state => state.tracer);\n  const tag = { tag: _.get(activeEvent, 'tag') } as {};\n\n  return (\n    <div>\n      <JSONTree data={tag} theme={theme} invertTheme={false} hideRoot={true} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Drawer } from 'antd';\nimport _ from 'lodash';\nimport { anyStrToColor } from '../helper';\nimport { useStoreActions, useStoreState } from '../store';\nimport { EventScope, TraceEvent } from '../types';\nimport { EventDetail } from './EventDetail';\n\nfunction EventInfo() {\n  const { events, activeEvent } = useStoreState(store => store.tracer);\n  const { active, inactive } = useStoreActions(actions => actions.tracer);\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'eventName',\n      render: (name: string, record: TraceEvent, index: number) => (\n        <div style={{ cursor: 'pointer' }} onClick={() => active(index)}>\n          <svg width=\"15\" height=\"15\">\n            <rect fill={anyStrToColor(name)} width=\"15\" height=\"15\" />\n          </svg>\n          {name}\n        </div>\n      ),\n    },\n    {\n      title: 'Epoch',\n      dataIndex: 'scope',\n      render: (scope: EventScope) => {\n        return _.get(scope, 'epochId');\n      },\n    },\n    {\n      title: 'Round',\n      dataIndex: 'scope',\n      render: (scope: EventScope) => {\n        return _.get(scope, 'roundId');\n      },\n    },\n    {\n      title: 'Time',\n      dataIndex: 'timestamp',\n      render: (timestamp: number) => {\n        return new Date(timestamp).toJSON();\n      },\n    },\n  ];\n\n  return (\n    <div style={{ position: 'relative', overflow: 'hidden' }}>\n      <Table\n        size=\"middle\"\n        rowKey={record => String(record.timestamp)}\n        dataSource={events}\n        columns={columns}\n        pagination={false}\n        scroll={{ y: 480 }}\n      />\n      <Drawer\n        placement=\"right\"\n        width={400}\n        onClose={() => inactive()}\n        visible={!!activeEvent}\n        getContainer={false}\n        style={{ position: 'absolute' }}\n      >\n        <EventDetail />\n      </Drawer>\n    </div>\n  );\n}\n\nexport { EventInfo };\n","import React from 'react';\nimport { JSONLogReader } from '../component/FileZone';\nimport { Minimap } from './Minimap';\nimport { useStoreActions, useStoreState } from '../store';\nimport { EventInfo } from './EventInfo';\n\nconst Profile = () => {\n  return (\n    <div>\n      <Minimap />\n      <EventInfo />\n    </div>\n  );\n};\n\nexport const Tracer: React.FC = () => {\n  const { eventLoaded } = useStoreState(store => store.tracer);\n  const loadEvents = useStoreActions(store => store.tracer.loadEvents);\n  return (\n    <div>\n      {eventLoaded ? <JSONLogReader onLoad={loadEvents} /> : <Profile />}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Icon, Layout } from 'antd';\nimport styled from 'styled-components';\n\nconst Header = Layout.Header;\n\nconst Logo = styled.div`\n  width: 120px;\n  height: 31px;\n  margin: 16px 24px 16px 0;\n  line-height: 32px;\n  float: left;\n  font-weight: bold;\n`;\n\nexport const AppHeader: React.FC = () => {\n  return (\n    <Header>\n      <Logo>\n        <Icon type=\"play-circle\" /> Moody Blues\n      </Logo>\n    </Header>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Tracer } from './container/Tracer';\nimport { store } from './store';\nimport { StoreProvider } from 'easy-peasy';\nimport { Layout } from 'antd';\nimport { AppHeader } from './container/Header';\n\nconst { Content } = Layout;\n\nconst App: React.FC = () => {\n  return (\n    <StoreProvider store={store}>\n      <AppHeader />\n      <Content>\n        <Tracer />\n      </Content>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}